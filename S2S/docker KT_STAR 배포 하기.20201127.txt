docker KT_STAR 배포 하기



# 작성일: 2020.11.27 기준
# 서버-TO-서버 보안관 역할


ㅇ 사전준비 
   - CentOS7 & docker Install
   - docker 기동 : systemctl start docker
   - 반드시 시간 동기화 맞는지 확인. 안맞으면 x509: certificate has expired or is not yet valid 에러 발생


0. SELiux
"/proc/self/attr/keycreate: permission denied" 에러 발생시
# setenforce 0


1. 방화벽 확인
# systemctl stop firewalld
# systemctl disable firewalld
# systemctl stop docker
# systemctl start docker
# iptables -nvL


(만약 firewalld 사용시 https 서비스 오픈 필요)
# systemctl restart firewalld
# firewall-cmd --add-port=9443/tcp --permanent
# firewall-cmd --reload
# firewall-cmd --list-all



2. 프로그램 다운로드 및 실행
# mkdir -p /Project1/
# cd /Project1/
# rm -rf *
# wget https://github.com/gzone2000/cicd/raw/master/S2S/2.KT_STAR.deploy.20190918.tar.gz
# tar xvzf 2.KT_STAR.deploy.20190918.tar.gz
# cd KT_STAR
# sh ./INSTALL.KT_AAAS.sh
# sh ./STOP.KT_STAR.sh
# sh ./START.KT_STAR.sh



3. 웹브라우져 
https://<IP Address>:9443/S2S
admin/c@g3K!cK



4. KT_STAR STOP/START
# cd /Project
# sh ./STOP.KT_STAR.sh
# sh ./START.KT_STAR.sh



5. 감시할 Linux 서버에 대해서 아래와 같이 파일 복사 필요 : "S2S 클라이언트 스크립트.txt" 파일 참조

# 감시할 Linux 서버마다 /etc/profile.d 폴더에 "cmd_list.sh" 파일 복사해야 함.
# "cmd_list.sh" 파일 내용중에 SEVERIP="10.4.249.202" 라인을 보안관 서버 주소로 수정해야 함.

# cat /etc/profile.d/cmd_list.sh 

function logging
{

SKIP="N"
SEVERIP="10.4.249.202"
UPATH="/S2S/pages"
URL="${SEVERIP}${UPATH}"
cmd=$(history|tail -1|sed 's/^[ ]*[0-9]\+[ ]*//' | sed 's|&|#Y#|g')
t_date=$(date)

if [ -n "$cmd" ] ; then

        if [ -z "$cmd_old" ] ; then
                if [ "$t_date" = "$t_date_old" ] ; then
                        SKIP="Y"
                fi
        fi

        IP=`who am i|awk -F'(' '{print $2}' |sed 's/[()]//g'`
        if [ ! -z "$IP" ] ; then
                VAL=${IP//[0-9.]}
                if [ ! -z "$VAL" ] ; then
                        if [ "$VAL" = ":" ] ; then
                                IP="Console"
                        else
                                IP=$(getent hosts $IP | awk '{print $1}')
                        fi
                fi
        else
                IP="Console"
        fi

        if [ "$cmd" = "$cmd_old" ] ; then
                SKIP="Y"
        fi

        CONN=$(curl -s --connect-timeout 1 http://$URL/StaTus.html)
        if [ $? -eq 0 -a "$SKIP" != "Y" ] ; then
                logger -p local6.debug -t CMD "`hostname` $USER $IP $$ $PWD C=$cmd"
                RESULT=$(curl -s -d "host=`hostname`&user=$USER&ip=$IP&pid=$$&pwd=$PWD&command=$cmd" http://$URL/get_command.php)
                F_CHAR=$(echo $RESULT | awk -F'-' '{print $1}')
                S_CHAR=$(echo $RESULT | awk -F'-' '{print $2}')
                if [ "$F_CHAR" = "BLK" ]; then
                        if [ "$S_CHAR" = "TIME" ]; then
                                MSG5="by Abnormal Time"
                        elif [ "$S_CHAR" = "IP" ]; then
                                MSG5="by Abnormal IP"
                        else 
                                MSG5="by Abnormal Command"
                        fi
                        echo
                        echo "# Sorry, You Can't execute your command $MSG5: $cmd"
                        echo "# Log Out by Force ......."
                        echo
                        exit
                elif [ "$F_CHAR" = "CRIT" ]; then
                        echo
                        echo "# approving Your Command : $cmd"
                        echo "# Waiting ........"
                        echo
                        echo
                        RESULT2=$(curl -s -d "utime=$S_CHAR" http://$URL/approve_command.php)
                        if [ "$RESULT2" = "SUCC " ]; then
                                echo
                                echo "# Executing Your Critical Command : $cmd"
                                echo "# OK"
                                echo
                        elif [ "$RESULT2" = "REJ " ]; then
                                # Critical Command STOP.....
                                echo "# Rejected Your Critical Command : $cmd"
                                echo '# Killed your Command !!'
                                echo
                                echo
                                kill -SIGKILL $$
                        else
                                while true ; do
                                        echo "# Canceled Your Critical Command : $cmd"
                                        echo "# Press Crtl+C to CANCEL your Command "
                                        echo
                                        echo
                                        sleep 5
                                done
                        fi
                fi

        fi
fi

cmd_old=$cmd
t_date_old=$t_date

}
trap logging DEBUG






@@ 참고 @@

# cat INSTALL.KT_AAAS.sh 
sysctl -w net.ipv4.conf.all.forwarding=1
docker rm -f KT_STAR
docker run --privileged --name KT_STAR --restart=always -d -p 8080:80 -p 9443:443 \
-v /Project1/KT_STAR/html:/var/www/html \
-v /Project1/KT_STAR/mysql:/var/lib/mysql \
gzone2000/my_test:CentOS7_BASE_LAMP_KTSTAR

# cat START.KT_STAR.sh 
docker start KT_STAR
